# name: Weekly Team Sync
# on: [push]
# # on:
# #   schedule:
# #     - cron: 5 * * * *

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout branch
#         uses: actions/checkout@v4

#       - name: Generate release tag
#         id: generate_release_tag
#         uses: amitsingh-007/next-release-tag@v6.0.0
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           tag_prefix: "v"
#           tag_template: "yyyy.mm.dd.i"

#       - name: Create Release
#         uses: softprops/action-gh-release@v2
#         with:
#           name: Release ${{ steps.generate_release_tag.outputs.next_release_tag }}
#           tag_name: ${{ steps.generate_release_tag.outputs.next_release_tag }}
#           token: ${{secrets.GITHUB_TOKEN}}
#           generate_release_notes: true

name: Nightly Snapshot

# on:
#   schedule:
#     - cron: "51 * * * *"
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: Generate Git Tag
        id: generate_tag
        run: |
          VERSION_PREFIX="v"
          VERSION_MAJOR_MINOR="1.0"
          VERSION_PATCH=$(git tag --list "${VERSION_PREFIX}${VERSION_MAJOR_MINOR}.*" --sort=-version:refname | head -n 1 | grep -oE '[0-9]+$')
          if [ -z "$VERSION_PATCH" ]; then
            VERSION_PATCH=0
          else
            VERSION_PATCH=$((VERSION_PATCH + 1))
          fi
          NEW_TAG="${VERSION_PREFIX}${VERSION_MAJOR_MINOR}.${VERSION_PATCH}"
          echo "Generated new tag: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Push Git Tag
        run: |
          git tag $NEW_TAG
          git push origin $NEW_TAG
